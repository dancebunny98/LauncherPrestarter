name: Build Tauri App

on:
  push:
    branches: [ rust/5.7.x ]
  pull_request:
    branches: [ rust/5.7.x ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Tauri app
        run: yarn tauri build

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: src-tauri/target/release/*.exe
          retention-days: 30

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/rust/5.7.x'
    permissions:
      contents: write  # обязательно для создания релизов и тегов

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # нужно для работы с тегами и логом

      - name: Get short commit SHA
        id: get_commit
        run: echo "commit_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if git fetch --tags --quiet 2>/dev/null && \
             latest_tag=$(git describe --tags --abbrev=0 2>/dev/null); then
            echo "from_tag=$latest_tag" >> $GITHUB_OUTPUT
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log "$latest_tag..HEAD" --oneline --no-merges >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "from_tag=beginning" >> $GITHUB_OUTPUT
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log --oneline --no-merges >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-exe
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "build-${{ steps.get_commit.outputs.commit_short }}"
          name: "Auto-build ${{ steps.get_commit.outputs.commit_short }}"
          body: |
            Automatic build from branch `rust/5.7.x` at commit `${{ steps.get_commit.outputs.commit_short }}`.

            **Changes since ${{ steps.changelog.outputs.from_tag }}:**
            ```
            ${{ steps.changelog.outputs.changelog }}
            ```
          draft: false
          prerelease: true
          files: ./artifacts/*.exe
